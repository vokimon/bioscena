#!/bin/bash
######################################################################
# Build Number Generator v1.4 (Shell script)
# Coded by Vokimon (vokimon@jet.es)
######################################################################
# Its execution generates two files:
# * "build.h" A header file defining two constants with the current 
#   build number and date-stamps
# * Previous "build.h" is used to calculate the next buildnumber, so 
#   be careful by altering it.
# * If "build.h" its not present, current buildnumber will be 1.
# * "buildlog.h" A history file containing all the build numbers and 
#   date-stamps as they are generated.
######################################################################

appname="Build Number Generator"
version=1.4
copyrightholder="Vokimon/KKEPerians UNLTD"
copyrightyear="1998-2001"
historia="buildlog.txt"
entrada="build.h"
sortida="build.h"
build=0

printf "$appname v$version\nCopyright (c) $copyrightyear $copyrightholder\n"

# Check the accesibility of the files
if [ -f $historia -a ! -w $historia ]; then
	printf "Warning: Could not append build log entries at file \"%s\"\n" $historia >&2
fi
if [ -f $entrada -a ! -r $entrada ]; then
	printf "Error: Could not read previous build information from file \"%s\"\n" $entrada >&2
	exit -1
fi

# Parse previous version information if it already exists
if [ ! -f $entrada ]
then
	echo "New project: creating $entrada"
	touch $entrada
	echo "Building with no build.h present" >> $historia;
else
	build=`cat $entrada | { read foo; read foo; read foo foo build foo; echo $build; }` 
fi

# Reconstruct current build information
build=$(($build + 1))
buffer=`date +"%Y%m%d %H:%M:%S"`

# Generate build header
if [ ! -w $sortida ]; then
	printf "Error: Can't open '%s' to modify it\n" $sortida >&2
	exit -1
fi

{
	printf "// $appname v$version\n"
	printf "// Copyright (c) $copyrightyear $copyrightholder\n"
	printf "#define BuildNumber 0x%04x\n" $build
	printf "#define BuildDate \"%s\"\n" "$buffer"
	echo   "// Don't modify anything in this file but the hexadecimal number above"
	echo   "// If something gets wrong, delete this file, run the generator, and"
	echo   "// modify the hex number acordantly with the last version you remember"
} > $sortida

# Logs
printf "Building 0x%04X - %s\n" $build "$buffer" >> $historia

# User output information
printf "Generated build number:\t0x%04x - %s\n" $build "$buffer" >&2

exit 0

